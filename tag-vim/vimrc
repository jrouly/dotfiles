" Enable Pathogen

call pathogen#infect()
call pathogen#helptags()


" General Vim behavior
set nocompatible   " stop vim from emulating vi
filetype plugin on " turn on filetype recognition
syntax on          " turn on syntax highlighting
set mouse=a        " enable mouse interactivity
set ttyfast        " scroll quickly
set backspace=2    " use backspace everywhere
set fileformats=unix,dos,mac " try to recognize line endings
set directory=~/.vim/swap//,/tmp/vim/swap//


" Automatic per-filetype settings
autocmd FileType tex setlocal spell spelllang=en_us textwidth=0
au BufNewFile,BufRead *.scala set filetype=scala
au BufNewFile,BufRead *.sbt set filetype=scala
au BufNewFile,BufRead *.csv set tw=0
au BufNewFile,BufRead Jenkinsfile set syntax=groovy


" Spellchecking & Autocompletion
set dictionary+=/usr/share/dict/words
set complete+=k
nnoremap <Leader>s :set dictionary=/dev/null<CR>


" Search behaviour
set ignorecase     " make searches case insensitive
set smartcase      " case sensitive when uppercase present
set hlsearch       " highlight search terms

" center the screen on search terms and undos/redos
nnoremap n nzz
nnoremap N Nzz


" General UI stuff
set number         " show line numbers
set showcmd        " always show current command
set showmode       " always show current mode
set showmatch      " show matching brackets & parentheses
set list listchars=tab:>Â·,trail:~
set title          " always show title
set ruler          " always show information at the bottom


" Coloured columns
set colorcolumn=80 " display color column
set cursorline
set cursorcolumn   " show the cursor column
highlight CursorColumn ctermbg=Blue


" Solarized settings
set t_Co=256
let g:solarized_visibility="high" " high visibility for line endings
" let g:solarized_termcolors=256    " 256 colors
set background=dark   " for solarized dark
"set background=light   " for solarized light
colorscheme solarized " for solarized


" Text formatting
set autoindent     " automatically indent
set cindent        " better automatic indenting
set tabstop=2      " tab spacing
set softtabstop=2  " unify
set shiftwidth=2   " indent by 2 columns
set shiftround     " always indent to the nearest tabstop
set expandtab      " use spaces instead of tabs
set smarttab       " use spaces at the start of a line, spaces elsewhere
set tw=75          " set hard word-wrap column at 75
filetype indent on " enable automatic indentation based on filetype


" File encoding
set termencoding=utf-8
set encoding=utf-8


" <Ctrl-l> redraws the screen and removes search highlighting
nnoremap <silent> <C-l> :nohl<CR><C-l>

" Autocompletion for python
let g:pydiction_location="~/.vim/bundle/pydiction/complete-dict"
let g:pydiction_menu_height=5


" Code folding
set foldmethod=marker
au BufWinEnter * silent! loadview
set foldopen=block,hor,insert,jump,mark,percent,quickfix,search,tag,undo
nnoremap <space> za


" NERDTree
map <C-n> :NERDTreeToggle<CR>
" Search for selected text, forwards or backwards.

vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

" JSON Formatting with Python
com! FormatJson %!python -m json.tool

" disable Syntastic for scala and sbt files
let g:syntastic_mode_map = {
  \ "mode": "active",
  \ "passive_filetypes": ["scala", "sbt", "tex"] }

vnoremap <silent><leader>y :<CR>:let @a=@" \| execute "normal! vgvy" \| let res=system("pbcopy", @") \| let @"=@a<CR>
